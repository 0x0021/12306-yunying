name: Qt macOS Build (arm64)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # ← 手动触发按钮

jobs:
  build:
    name: Build Qt for macOS arm64
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ 设置独立 Python 环境（规避 PEP 668 问题）
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install py7zr in isolated environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install py7zr==0.20.*

      # ✅ 安装 Qt
      - name: Install Qt (universal2)
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.1'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          modules: 'qtbase'

      # ✅ 构建项目（你使用 yunying.pro）
      - name: Build project for arm64
        run: |
          echo "QMAKE_APPLE_DEVICE_ARCHS = arm64" >> arm64.conf
          qmake yunying.pro QMAKE_EXTRA_CONF=arm64.conf
          make -j$(sysctl -n hw.logicalcpu)

      # ✅ 检查产物架构（可选）
      - name: Check architecture
        run: |
          file ./build/yunying || echo "Binary not found"

      # ✅ 上传产物（调整为你的实际产物路径）
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: yunying-macos-arm64
          path: ./build/yunying.app
